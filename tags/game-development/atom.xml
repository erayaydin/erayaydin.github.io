<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Eray Aydın - game-development</title>
    <subtitle>Scala Developer, Laravel Artisan, Free Software Fan, Archy, Linux Lover, WoW Loremaster, Junior Game Developer</subtitle>
    <link rel="self" type="application/atom+xml" href="https://era.yayd.in/tags/game-development/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://era.yayd.in"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2020-03-22T05:01:53+00:00</updated>
    <id>https://era.yayd.in/tags/game-development/atom.xml</id>
    <entry xml:lang="en">
        <title>Kotlin ve jMonkeyEngine ile Oyun Geliştirme - Tanımlar</title>
        <published>2020-03-22T05:01:53+00:00</published>
        <updated>2020-03-22T05:01:53+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://era.yayd.in/blog/kotlin-jmonkeyengine-oyun-gelistirme-tanimlar/"/>
        <id>https://era.yayd.in/blog/kotlin-jmonkeyengine-oyun-gelistirme-tanimlar/</id>
        
        <content type="html" xml:base="https://era.yayd.in/blog/kotlin-jmonkeyengine-oyun-gelistirme-tanimlar/">&lt;h1 id=&quot;kotlin-ve-jmonkeyengine-ile-oyun-gelistirme-tanimlar&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#kotlin-ve-jmonkeyengine-ile-oyun-gelistirme-tanimlar&quot; aria-label=&quot;Anchor link for: kotlin-ve-jmonkeyengine-ile-oyun-gelistirme-tanimlar&quot;&gt;#&lt;&#x2F;a&gt;
Kotlin ve jMonkeyEngine ile Oyun Geliştirme - Tanımlar&lt;&#x2F;h1&gt;
&lt;p&gt;Merhaba,
Bu yazı serisi içerisinde &lt;strong&gt;Kotlin&lt;&#x2F;strong&gt; ve &lt;strong&gt;jMonkeyEngine&lt;&#x2F;strong&gt; ile oyun geliştirme yöntemine bakacağız. Seri içerisinde sorunuz olursa sormaktan çekinmeyin. Sorularınızı issue olarak Github üzerinden açabilirsiniz.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Not: &lt;strong&gt;Kotlin&lt;&#x2F;strong&gt; tecrübem hiç denecek kadar azdır, bu sebeple hata yaptığım noktalar olursa şimdiden özür dilerim. Hataları Git reposunda düzelterek PR oluşturabilirsiniz :)&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Şimdi &lt;strong&gt;kısaca&lt;&#x2F;strong&gt; jMonkeyEngine, Kotlin, Gradle, Graphic Pipeline ve Scene Graph kavramlarına bakacağız.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kotlin-nedir&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#kotlin-nedir&quot; aria-label=&quot;Anchor link for: kotlin-nedir&quot;&gt;##&lt;&#x2F;a&gt;
Kotlin Nedir?&lt;&#x2F;h2&gt;
&lt;p&gt;Kotlin; statik, nesneye yönelimli özgür bir fonksiyonel programlama dilidir. Java ile birlikte çalışacak şekilde geliştirilmiştir lakin çok daha “hoş” bir syntax yapısı ile geliştirme yapmanıza olanak sağlamakta. Konsept olarak JVM için kullanılmakta olsa da artık LLVM ile mobil native ve JS için de geliştirmede kullanılmakta. Birden çok platformu desteklemesine rağmen jMonkeyEngine ile oyun geliştirirken bu seride Kotlin JVM’i kullanarak ilerleyeceğiz bu sebeple Kotlin ile gelen cross-platform özelliğini kullanmayacağız. JVM ile çalıştırdığımız için JVM’in cross-platform özelliği seri içerisinde devam etmekte.&lt;&#x2F;p&gt;
&lt;p&gt;Yararlanabileceğiniz kaynaklar:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kotlinlang.org&#x2F;&quot;&gt;Kotlin Website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kotlinlang.org&#x2F;docs&#x2F;tutorials&#x2F;kotlin-for-py&#x2F;introduction.html&quot;&gt;Python tecrübesi olanlar için resmi Kotlin dersleri&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@halilozel1903&#x2F;kotlin-nedir-43e312d2dca6&quot;&gt;Halil Özel’den Kotlin Nedir?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.mobilhanem.com&#x2F;kotlin-egitimleri&#x2F;&quot;&gt;Mobil Hanem - Kotlin Eğitimi&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jmonkeyengine-nedir&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#jmonkeyengine-nedir&quot; aria-label=&quot;Anchor link for: jmonkeyengine-nedir&quot;&gt;##&lt;&#x2F;a&gt;
jMonkeyEngine Nedir?&lt;&#x2F;h2&gt;
&lt;p&gt;jMonkeyEngine, Java ile yazılmış bir modern 3D geliştirme sağlayan bir oyun motorudur. Varsayılan olarak &lt;em&gt;LWJGL(Lightweight Java Game Library)&lt;&#x2F;em&gt; renderer paketini kullanmaktadır. Elbetteki kendi renderer paketinizi veya birbaşka 3. parti renderer paketini de kolayca enjekte edebilirsiniz. &lt;em&gt;LWJGL&lt;&#x2F;em&gt; ile OpenGL2+ sürümleri desteklenmektedir. Bu da oldukça geniş bir yelpaze demek. Alt başlıklar halinde; &lt;em&gt;jMonkeyEngineSDK&lt;&#x2F;em&gt;,  &lt;em&gt;LWJGL&lt;&#x2F;em&gt;, &lt;em&gt;Bullet Physics&lt;&#x2F;em&gt;, &lt;em&gt;NiftyGUI&lt;&#x2F;em&gt; parçalarını inceleyeceğiz.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jMonkeyEngine&#x2F;jmonkeyengine&#x2F;releases&quot;&gt;jMonkeyEngine sürümleri ve indirme&lt;&#x2F;a&gt; (İndirme yapmanıza gerek yok, jMonkeyEngine 3 SDK ile devam edecekseniz zaten kurulu gelecektir. Bir sonraki yazıda Gradle ile inşa mekanizmasını hazırlarken de jMonkeyEngine paketini indirteceğiz.)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Yararlanabileceğiniz kaynaklar:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;jmonkeyengine.org&#x2F;&quot;&gt;jMonkeyEngine Website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.jmonkeyengine.org&#x2F;&quot;&gt;jMonkeyEngine Wiki&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;javadoc.jmonkeyengine.org&#x2F;v3.x&#x2F;index.html&quot;&gt;JavaDoc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hub.jmonkeyengine.org&#x2F;&quot;&gt;Forum&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jmonkeyengine-3-sdk-jmonkeyplatform&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#jmonkeyengine-3-sdk-jmonkeyplatform&quot; aria-label=&quot;Anchor link for: jmonkeyengine-3-sdk-jmonkeyplatform&quot;&gt;###&lt;&#x2F;a&gt;
jMonkeyEngine 3 SDK (jMonkeyPlatform)&lt;&#x2F;h3&gt;
&lt;p&gt;jMonkeyEngine 3 sürümü ile gelen &lt;code&gt;jMonkeyEngine 3 SDK&lt;&#x2F;code&gt;, Netbeans tabanlı olan bu geliştirme ortamı eklenti desteği ve grafiksel geliştirme sağlamaktadır. İçerisinde, Sahne Editörü (Scene Editor), Materyal Editörü (Material Editor), Filtreleme Editörü (Filter Editor), dahili Blender ve dahili JDK bulunmaktadır.&lt;&#x2F;p&gt;
&lt;p&gt;Seri içerisinde olabildiğince &lt;code&gt;Intellij IDEA&lt;&#x2F;code&gt; ve &lt;code&gt;jMonkeyEngine 3 SDK&lt;&#x2F;code&gt; için anlatım yapmaya çalışacağım lakin sorun oluşturabilecek noktalarda &lt;code&gt;Intellij IDEA&lt;&#x2F;code&gt; üzerinden geliştirmeye devam edeceğim. Bu seri içerisindeki anlatımları bu IDE’lerden birinden veya beğendiğiniz başka bir IDE veya metin editörü ile uygulayabilirsiniz.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jMonkeyEngine&#x2F;sdk&#x2F;releases&#x2F;&quot;&gt;SDK Versiyonları ve İndirme (GNU&#x2F;Linux, Windows, OSX ve Kaynak&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;lwjgl-lightweight-java-game-library&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#lwjgl-lightweight-java-game-library&quot; aria-label=&quot;Anchor link for: lwjgl-lightweight-java-game-library&quot;&gt;###&lt;&#x2F;a&gt;
LWJGL (Lightweight Java Game Library)&lt;&#x2F;h3&gt;
&lt;p&gt;LWJGL, Java ile yazılmış bir oyun kütüphanesidir. Cross-platform olarak grafik (OpenGL, Vulkan), ses(OpenAL) ve paralel hesaplama(OpenCL) uygulamaları geliştirmenize yardımcı olmaktadır.&lt;&#x2F;p&gt;
&lt;p&gt;Dilerseniz geliştirmenizi LWJGL ve 3. parti yardımcı olacak paketlerle (GUI, Physic paketleri, Networking paketleri vs) yaparak daha low-level devam edebilirsiniz. Bu seri içerisindeki anlatımlar jMonkeyEngine odaklı olacağı için pek faydası olmayacaktır lakin göz atıp fikir almak da faydalı olur elbette :)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.lwjgl.org&#x2F;&quot;&gt;Website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.lwjgl.org&#x2F;guide&quot;&gt;Guide&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LWJGL&#x2F;lwjgl3&#x2F;tree&#x2F;master&#x2F;modules&#x2F;samples&#x2F;src&#x2F;test&#x2F;java&#x2F;org&#x2F;lwjgl&#x2F;demo&quot;&gt;Örnekler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;bullet-physics&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#bullet-physics&quot; aria-label=&quot;Anchor link for: bullet-physics&quot;&gt;###&lt;&#x2F;a&gt;
Bullet Physics&lt;&#x2F;h3&gt;
&lt;p&gt;Bullet, C&amp;amp;C++ ile geliştirilmiş bir fizik motorudur. Çarpışma hesaplama (collision detection), hareket ve diğer fizik işlemlerini sağlayan bir pakettir.&lt;&#x2F;p&gt;
&lt;p&gt;jMonkeyEngine, jBullet (Bullet’in Java’ya göre yazılmış hali) kullanarak fizik mekaniği sağlamaktadır.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bulletphysics&#x2F;bullet3&quot;&gt;Bullet Physics SDK&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;jbullet.advel.cz&#x2F;&quot;&gt;jBullet&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nifty-gui&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#nifty-gui&quot; aria-label=&quot;Anchor link for: nifty-gui&quot;&gt;###&lt;&#x2F;a&gt;
Nifty GUI&lt;&#x2F;h3&gt;
&lt;p&gt;Nifty GUI, Java ile yazılmış bir GUI geliştirme paketidir. Çizim kısmında OpenGL kullanmaktadır lakin elbette bu render kısmına müdahale edip başka bir renderer wrapper yazarak injekte edebilirsiniz.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nifty-gui&#x2F;nifty-gui&quot;&gt;Git Depo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;gradle&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#gradle&quot; aria-label=&quot;Anchor link for: gradle&quot;&gt;##&lt;&#x2F;a&gt;
Gradle&lt;&#x2F;h2&gt;
&lt;p&gt;Java, Groovy ve Kotlin ile yazılmış bir build mekanizmasıdır. Maven’deki gibi XML yazım biçimi yerine Groovy tarzında build otomasyonu oluşturmanızı sağlar. Paketlerimizi Gradle ile belirleyip, inşa mekanizmasını kullanacağız.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;gradle.org&#x2F;&quot;&gt;Website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gradle&#x2F;gradle&quot;&gt;Git Depo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;graphic-pipeline&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#graphic-pipeline&quot; aria-label=&quot;Anchor link for: graphic-pipeline&quot;&gt;##&lt;&#x2F;a&gt;
Graphic Pipeline&lt;&#x2F;h2&gt;
&lt;p&gt;3 Boyutlu bir ortamın, 2 boyutlu ekrana getirilmesindeki süreci özetleyen kavrama “Graphic Pipeline” denmektedir. Oyunumuzu 3 boyutlu ortamda geliştireceğimiz için, grafiğin hazırlanma süreci hakkında bilgi sahibi olmak da önemlidir. Özellikle daha düşük seviyeli ortamlarda (LWJGL veya direk bir grafik API kullanarak) geliştirme yapanların muhakkak bilgi sahibi olması gereken bir kavramdır. Hem yazılımsal hem de donanımsal bir süreç gerektiren bu yolculuk için herkes tarafından benimsenmiş bir yol bulunmamaktadır. Lakin, Direct3D ve OpenGL gibi grafik kütüphaneleri, donanım hızlandırması sağlamak amaçlı bu süreçlerdeki benzer adımları ortaklaştırmıştır. Yani, geliştiricinin grafik hızlandırmayı kullanması için donanıma direk müdahalesi yerine bunu soyutlayarak kullanmasını amaçlamaktadır.&lt;&#x2F;p&gt;
&lt;p&gt;Bu konuda, şu videoyu izlemenizi tavsiye ederim: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bgckX62f4EA&quot;&gt;thebennybox - Intro to Modern OpenGL Tutorial: Graphics Pipeline&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;genel-yapi&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#genel-yapi&quot; aria-label=&quot;Anchor link for: genel-yapi&quot;&gt;###&lt;&#x2F;a&gt;
Genel Yapı&lt;&#x2F;h3&gt;
&lt;p&gt;Genel yapıda çizimin oluşması ve ekrana gelmesi için 3 adım bulunmaktadır:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Application (Uygulama)&lt;&#x2F;li&gt;
&lt;li&gt;Geometry (Geometri)&lt;&#x2F;li&gt;
&lt;li&gt;Rasterization (Pikselleştirme)&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;1-application-uygulama&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#1-application-uygulama&quot; aria-label=&quot;Anchor link for: 1-application-uygulama&quot;&gt;####&lt;&#x2F;a&gt;
1. Application (Uygulama)&lt;&#x2F;h4&gt;
&lt;p&gt;Uygulama tarafından hesaplanan çizimin (bütün collision hesaplaması, çizilecek nesnelerin noktası, üçgenleri vs) belirlenip pipeline’da bir sonraki adıma iletilmesidir.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;2-geometry-geometri&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#2-geometry-geometri&quot; aria-label=&quot;Anchor link for: 2-geometry-geometri&quot;&gt;####&lt;&#x2F;a&gt;
2. Geometry (Geometri)&lt;&#x2F;h4&gt;
&lt;p&gt;Geometri adımında, Model &amp;amp; Camera’nin yerleştirilmesi, ışıklandırmanın hesaplanması, projeksiyonun hesaplanması, clipping (uzak&#x2F;yakın) ve pencereye göre konumlandırılması adımları yer almaktadır.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;3-rasterization-piksellestirme&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#3-rasterization-piksellestirme&quot; aria-label=&quot;Anchor link for: 3-rasterization-piksellestirme&quot;&gt;####&lt;&#x2F;a&gt;
3. Rasterization (Pikselleştirme)&lt;&#x2F;h4&gt;
&lt;p&gt;Piksel içerisindeki rengi belirleyen adımdır. Çizilecek nesnenin her bir noktası için bu pikselleştirme yapılmaktadır (eğer varsa; Fragment Shader bu adım içerisinde devreye alınmaktadır).&lt;&#x2F;p&gt;
&lt;h4 id=&quot;opengl-rendering-pipeline&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#opengl-rendering-pipeline&quot; aria-label=&quot;Anchor link for: opengl-rendering-pipeline&quot;&gt;####&lt;&#x2F;a&gt;
OpenGL Rendering Pipeline&lt;&#x2F;h4&gt;
&lt;p&gt;Örnek olarak, OpenGL’in Rendering Pipeline’ı açıklamak gerekirse;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Vertex Spec (OpenGL)&lt;&#x2F;li&gt;
&lt;li&gt;Vertex Shader (Programcı tarafından müdahale edilebilir)&lt;&#x2F;li&gt;
&lt;li&gt;Tessellation (Opsiyonel olarak, programcı tarafından müdahale edilebilir)&lt;&#x2F;li&gt;
&lt;li&gt;Geometry Shader (Opsiyonel olarak, programcı tarafından müdahale edilebilir)&lt;&#x2F;li&gt;
&lt;li&gt;Vertex Post-Processing (OpenGL)&lt;&#x2F;li&gt;
&lt;li&gt;Primitive Assembly (OpenGL)&lt;&#x2F;li&gt;
&lt;li&gt;Rasterization (OpenGL)&lt;&#x2F;li&gt;
&lt;li&gt;Fragment Shader (Opsiyonel olarak, programcı tarafından müdahale edilebilir)&lt;&#x2F;li&gt;
&lt;li&gt;Per-Sample Ops (OpenGL)&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Burada programcının çizimin donanımsal hızlandırma kullanması için müdahale etmesini sağlamaktadır. Vertex Shader, Geometry Shader ve Fragment Shader’ı GLSL dili ile yazarak donanıma yapması gereken işlevi söyleme işidir.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bu konuda, şu videoyu izlemenizi tavsiye ederim: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bgckX62f4EA&quot;&gt;thebennybox - Intro to Modern OpenGL Tutorial: Graphics Pipeline&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;scene-graph&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#scene-graph&quot; aria-label=&quot;Anchor link for: scene-graph&quot;&gt;##&lt;&#x2F;a&gt;
Scene Graph&lt;&#x2F;h2&gt;
&lt;p&gt;jMonkeyEngine ile oyun geliştirirken bu kavramı sıkça duyacağız.  Oyunumuzu geliştirirken kurguladığımız sanal ortama &lt;strong&gt;scene graph&lt;&#x2F;strong&gt; denmektedir. Bu sanal sahnemizdeki her bir objemize de &lt;strong&gt;Spatial&lt;&#x2F;strong&gt; diyeceğiz. Bu &lt;em&gt;spatial&lt;&#x2F;em&gt; nesnelerimizin her birinde de &lt;strong&gt;translation&lt;&#x2F;strong&gt;(konum), &lt;strong&gt;rotation&lt;&#x2F;strong&gt;(baktığı yön) ve &lt;strong&gt;scale&lt;&#x2F;strong&gt;(büyüklük) bilgisi bulunacaktır. Buradaki &lt;strong&gt;translation&lt;&#x2F;strong&gt; konum, 3 boyuttan aşina olduğumuz X,Y ve Z kavramları ile belirtilmektedir.&lt;&#x2F;p&gt;
&lt;p&gt;Bu sahnemizi kurgularken farklı obje türüne ihtiyacımız olacaktır. Tahmin edebileceğiniz gibi, sahnemiz içerisinde görünmesini istediğimiz objeler olacağı gibi görünmesini istemediğimiz ve konum&#x2F;baktığı yön&#x2F;büyüklük gibi değerlerini kullanacağımız objeler de yer alacaktır. Varsayılan olarak oluşturduğumuz bi &lt;strong&gt;spatial&lt;&#x2F;strong&gt; nesneler görünmez durumdadır ve sadece bu bahsettiğim bilgileri tutmaktadır. Lakin &lt;strong&gt;Geometry&lt;&#x2F;strong&gt; türünde olan &lt;strong&gt;spatial&lt;&#x2F;strong&gt; nesneler ise, şekli olan ve görülebilir nesnelerdir. Şekillerini &lt;strong&gt;mesh&lt;&#x2F;strong&gt; ler belirtmekte ve &lt;strong&gt;material&lt;&#x2F;strong&gt; ler ile de görüntüsünü almaktadır.&lt;&#x2F;p&gt;
&lt;p&gt;Bir diğer husus da &lt;strong&gt;spatial&lt;&#x2F;strong&gt; nesnelerin yönetimi. Kurgu hazırladığımız için bir süre sonra bu nesnelerin yönetiminde zorlanabiliriz. Bu sebeple, &lt;strong&gt;node&lt;&#x2F;strong&gt; türündeki &lt;strong&gt;spatial&lt;&#x2F;strong&gt; ları kullanacağız. Hatırlarsanız, &lt;strong&gt;spatial&lt;&#x2F;strong&gt; ların belirli bir konumu oluyordu, diğer nesnelerimizi bu &lt;strong&gt;node&lt;&#x2F;strong&gt; lara yerleştireceğiz. &lt;strong&gt;node&lt;&#x2F;strong&gt; spatial’ları nested özelliğine sahip yani &lt;strong&gt;parent&lt;&#x2F;strong&gt; ve &lt;strong&gt;child&lt;&#x2F;strong&gt; node lar tanımlayabilirsiniz. Varsayılan olarak bu kurgumuzda &lt;strong&gt;base node&lt;&#x2F;strong&gt; üzerine diğer node ları ve spatial ları ekleyeceğiz.&lt;&#x2F;p&gt;
&lt;p&gt;Örnek vermek gerekirse;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;rootNode
&lt;ul&gt;
&lt;li&gt;playerNode
&lt;ul&gt;
&lt;li&gt;aimNode&lt;&#x2F;li&gt;
&lt;li&gt;armNode&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;envNode
&lt;ul&gt;
&lt;li&gt;houseNode&lt;&#x2F;li&gt;
&lt;li&gt;marketNode&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Bu konuda hazırlanan şu slayt da oldukça bilgi verici: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.jmonkeyengine.org&#x2F;tutorials&#x2F;scenegraph&#x2F;assets&#x2F;fallback&#x2F;index.html&quot;&gt;3D Scene Graph for Dummies&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Basit Bir SDL Projesi Oluşturma</title>
        <published>2015-09-25T17:52:00+00:00</published>
        <updated>2015-09-25T17:52:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://era.yayd.in/blog/basit-bir-sdl-projesi-olusturma/"/>
        <id>https://era.yayd.in/blog/basit-bir-sdl-projesi-olusturma/</id>
        
        <content type="html" xml:base="https://era.yayd.in/blog/basit-bir-sdl-projesi-olusturma/">&lt;p&gt;Öncelikle C++ ile basit bir SDL kodu yazmamız gerekiyor.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c++&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c++ &quot;&gt;&lt;code class=&quot;language-c++&quot; data-lang=&quot;c++&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;SDL2&#x2F;SDL.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stdio.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span&gt;[])
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SDL_Init&lt;&#x2F;span&gt;&lt;span&gt;(SDL_INIT_VIDEO) &amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;SDL baslatilamadi! SDL Hatasi: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SDL_GetError&lt;&#x2F;span&gt;&lt;span&gt;());
&lt;&#x2F;span&gt;&lt;span&gt;	} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;SDL baslatildi!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;	}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Projemizi derlemede  kullanacağım bir &lt;code&gt;Makefile&lt;&#x2F;code&gt; dosyası oluşturalım.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;make&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-make &quot;&gt;&lt;code class=&quot;language-make&quot; data-lang=&quot;make&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#OBJS derlenecek dosyalar
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OBJS &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;main.cpp
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#CC kullanacağımız derleyici
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CC &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;g++
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#CFLAGS derleyiciye özel değerlerimiz, -w = Uyarıları gizle
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CFLAGS &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-w -Wall
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#LFLAGS kütüphane linkleyicileri
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LFLAGS &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-lSDL2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#OBJ çalıştırılabilir dosyamızın adı olacak
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OBJ &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;main
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#sadece `make` kullanıldığında çalışacak olan komutumuz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;all &lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OBJS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CC&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) $(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OBJS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) $(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CFLAGS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) $(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LFLAGS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OBJ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Projemizi &lt;code&gt;Make&lt;&#x2F;code&gt; ile derleyelim.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Projemizi çalıştıralım.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;main
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux - SDL2 Kurulumu</title>
        <published>2015-09-24T01:00:00+00:00</published>
        <updated>2015-09-24T01:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://era.yayd.in/blog/linux-sdl2-kurulumu/"/>
        <id>https://era.yayd.in/blog/linux-sdl2-kurulumu/</id>
        
        <content type="html" xml:base="https://era.yayd.in/blog/linux-sdl2-kurulumu/">&lt;h3 id=&quot;yum-paket-yoneticisi-ile-kurulum&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#yum-paket-yoneticisi-ile-kurulum&quot; aria-label=&quot;Anchor link for: yum-paket-yoneticisi-ile-kurulum&quot;&gt;###&lt;&#x2F;a&gt;
Yum Paket Yöneticisi ile Kurulum&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;yum&lt;&#x2F;span&gt;&lt;span&gt; install SDL2-devel
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;apt-paket-yoneticisi-ile-kurulum&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#apt-paket-yoneticisi-ile-kurulum&quot; aria-label=&quot;Anchor link for: apt-paket-yoneticisi-ile-kurulum&quot;&gt;###&lt;&#x2F;a&gt;
Apt Paket Yöneticisi ile Kurulum&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apt-get&lt;&#x2F;span&gt;&lt;span&gt; install libsdl2-dev
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;pacman-paket-yoneticisi-ile-kurulum&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#pacman-paket-yoneticisi-ile-kurulum&quot; aria-label=&quot;Anchor link for: pacman-paket-yoneticisi-ile-kurulum&quot;&gt;###&lt;&#x2F;a&gt;
Pacman Paket Yöneticisi ile Kurulum&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pacman -S&lt;&#x2F;span&gt;&lt;span&gt; sdl2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;kaynaktan-derleme&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#kaynaktan-derleme&quot; aria-label=&quot;Anchor link for: kaynaktan-derleme&quot;&gt;###&lt;&#x2F;a&gt;
Kaynaktan Derleme&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Kaynaktan derlemek için &lt;code&gt;base-devel&lt;&#x2F;code&gt; paketinin yüklü olduğundan emin olunuz.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Kaynak kodu tar.gz olarak &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.libsdl.org&#x2F;download-2.0.php&quot;&gt;buradan&lt;&#x2F;a&gt; indirin.&lt;&#x2F;p&gt;
&lt;p&gt;İndirdiğiniz tar.gz dosyasını açın.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tar -xf&lt;&#x2F;span&gt;&lt;span&gt; SDL2-X.x.x.tar.gz
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Açılan klasörün içeriğine gidelim. (&lt;code&gt;cd SDL2-X.x.x&lt;&#x2F;code&gt;)&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;configure
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make&lt;&#x2F;span&gt;&lt;span&gt; install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>C++ 2D Game Frameworks</title>
        <published>2015-04-20T12:00:00+00:00</published>
        <updated>2015-04-20T12:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://era.yayd.in/blog/cpp-2d-game-frameworks/"/>
        <id>https://era.yayd.in/blog/cpp-2d-game-frameworks/</id>
        
        <content type="html" xml:base="https://era.yayd.in/blog/cpp-2d-game-frameworks/">&lt;p&gt;Bu yazıda C++ 2D oyun kütüphaneleri hakkında bilgiler vereceğim. Avantajlarını ve eksikliklerini, artı ve eksi yönlerini öğrenebilirsiniz.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;oxygine&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#oxygine&quot; aria-label=&quot;Anchor link for: oxygine&quot;&gt;##&lt;&#x2F;a&gt;
Oxygine&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Açık kaynak&lt;&#x2F;li&gt;
&lt;li&gt;Çoklu-platform (MacOSX, iOS, Android, Windows, Linux, HTML5-Web-WebGL)&lt;&#x2F;li&gt;
&lt;li&gt;Saf C++ (Basit API desteği ile yazımı çok rahat, jQuery sloganı gibi &lt;code&gt;do more with less code&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Hata ayıklama modu, FPS ve performans kontrolü&lt;&#x2F;li&gt;
&lt;li&gt;SDL2 (Çok rahat olduğunu söyleyebilirim)&lt;&#x2F;li&gt;
&lt;li&gt;Yetersiz döküman, sadece API bilgisi&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;angel2d&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#angel2d&quot; aria-label=&quot;Anchor link for: angel2d&quot;&gt;##&lt;&#x2F;a&gt;
Angel2D&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Açık kaynak&lt;&#x2F;li&gt;
&lt;li&gt;Çoklu-platform (Mac, iOS, Windows, Linux)&lt;&#x2F;li&gt;
&lt;li&gt;Oxygine’e göre daha zorlu bir yazımı var API desteği çok yeterli değil fakat öğrendikten sonra sistemleri hazırlamak daha kolay. (low-level)&lt;&#x2F;li&gt;
&lt;li&gt;OpenGL (SDL2’ye göre biraz daha zor elbette)&lt;&#x2F;li&gt;
&lt;li&gt;Yetersiz döküman, sadece API bilgisi&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;torque-2d&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#torque-2d&quot; aria-label=&quot;Anchor link for: torque-2d&quot;&gt;##&lt;&#x2F;a&gt;
Torque 2D&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Açık kaynak&lt;&#x2F;li&gt;
&lt;li&gt;Çoklu-platform (Mac, Windows, iOS, Linux, Android)&lt;&#x2F;li&gt;
&lt;li&gt;OOP’a yatkın olanlar için çok iyi bir yazımı var.&lt;&#x2F;li&gt;
&lt;li&gt;End-user tarzı bir kütüphane&lt;&#x2F;li&gt;
&lt;li&gt;OpenGL (Angel2D’de belirttiğim gibi…)&lt;&#x2F;li&gt;
&lt;li&gt;Büyük döküman kaynağı&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;poly-code&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#poly-code&quot; aria-label=&quot;Anchor link for: poly-code&quot;&gt;##&lt;&#x2F;a&gt;
Poly Code&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Açık kaynak&lt;&#x2F;li&gt;
&lt;li&gt;Saf C++&lt;&#x2F;li&gt;
&lt;li&gt;LUA desteği (çok büyük bir artı)&lt;&#x2F;li&gt;
&lt;li&gt;Sloganı Oxygine ile aynı &lt;code&gt;do more with less code&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;IDE desteği var (end-user)&lt;&#x2F;li&gt;
&lt;li&gt;Kolay yayınlama (GUI ile platformlara çıkış)&lt;&#x2F;li&gt;
&lt;li&gt;2D&#x2F;3D desteği&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;sonuc&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#sonuc&quot; aria-label=&quot;Anchor link for: sonuc&quot;&gt;##&lt;&#x2F;a&gt;
Sonuç&lt;&#x2F;h2&gt;
&lt;p&gt;Eğer mobil merkezli bir oyun yapmayı düşünüyorsanız hiç durmayın &lt;code&gt;Oxygine&lt;&#x2F;code&gt; kullanın.&lt;&#x2F;p&gt;
&lt;p&gt;Eğer platform bağımsız ve işi tabandan almak istiyorsanız &lt;code&gt;Torque2D&lt;&#x2F;code&gt; kullanın.&lt;&#x2F;p&gt;
&lt;p&gt;Eğer kolay ve hızlı bir şekilde bir projeyi çıkarmak, rahat olmak istiyorsanız &lt;code&gt;Poly Code&lt;&#x2F;code&gt; kullanın.&lt;&#x2F;p&gt;
&lt;p&gt;Angel2D ve Oxygine kullandım ve pek yeterli bulduğumu söyleyemem. &lt;strong&gt;Poly Code&lt;&#x2F;strong&gt; ile şansımızı deneyelim :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux Oxygine C++ Game Framework Kurulumu</title>
        <published>2015-04-08T12:00:00+00:00</published>
        <updated>2015-04-08T12:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://era.yayd.in/blog/oxygine-framework/"/>
        <id>https://era.yayd.in/blog/oxygine-framework/</id>
        
        <content type="html" xml:base="https://era.yayd.in/blog/oxygine-framework/">&lt;p&gt;Linux ortamı için Oxygine C++ Game Framework’un kurulumu ile ilgili bir makaledir. Kurulum adımlarını takip ederek bir geliştirme ortamına
sahip olacağız.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;proje-dizinini-olusturma&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#proje-dizinini-olusturma&quot; aria-label=&quot;Anchor link for: proje-dizinini-olusturma&quot;&gt;##&lt;&#x2F;a&gt;
Proje Dizinini Oluşturma&lt;&#x2F;h2&gt;
&lt;p&gt;Öncelikle kendimize bir çalışma ortamı oluşturmamız gerekiyor. İstediğiniz bir dizinde uygulama klasörü açın. Makalede bu oluşturduğunuz dizine
&lt;code&gt;root&lt;&#x2F;code&gt; diyeceğiz.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;oxygine-framework-indirme&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#oxygine-framework-indirme&quot; aria-label=&quot;Anchor link for: oxygine-framework-indirme&quot;&gt;##&lt;&#x2F;a&gt;
Oxygine Framework İndirme&lt;&#x2F;h2&gt;
&lt;p&gt;C++ ile 2D oyun geliştirirken kullanacağımız Oxygine Framework’u &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;oxygine.org&#x2F;download.php&quot;&gt;buradan&lt;&#x2F;a&gt; indirebilirsiniz.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sayfada bize lazım olacak link &lt;code&gt;Download stable snaphot. Oxygine framework only.&lt;&#x2F;code&gt; kısmıdır. Yani sadece framework’u indirseniz yeterli. Diğer
linklerde önceden derlenmiş &lt;code&gt;binary&lt;&#x2F;code&gt; dosyaları bulunur. Bunlara ihtiyacımız yok.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;İndirdiğiniz sıkıştırılmış dosyayı açın. &lt;code&gt;oxygine-framework&lt;&#x2F;code&gt; klasörünü &lt;code&gt;root&lt;&#x2F;code&gt; klasörü içerisine yapıştırın.&lt;&#x2F;p&gt;
&lt;p&gt;Yeni klasör yapımız şu şekilde oldu.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├─root
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├─└&lt;&#x2F;span&gt;&lt;span&gt; oxygine-framework
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├───└&lt;&#x2F;span&gt;&lt;span&gt; 3rdPartyTools
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├───└&lt;&#x2F;span&gt;&lt;span&gt; cmake
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├───└&lt;&#x2F;span&gt;&lt;span&gt; libs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├───└&lt;&#x2F;span&gt;&lt;span&gt; ...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;sdl-kurulumu&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#sdl-kurulumu&quot; aria-label=&quot;Anchor link for: sdl-kurulumu&quot;&gt;##&lt;&#x2F;a&gt;
SDL Kurulumu&lt;&#x2F;h2&gt;
&lt;p&gt;Oxygine, &lt;strong&gt;SDL&lt;&#x2F;strong&gt; kütüphanesini kullandığı için mecburen onu da yüklememiz gerekiyor.&lt;&#x2F;p&gt;
&lt;p&gt;SDL’in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;libsdl.org&#x2F;hg.php&quot;&gt;yükleme sayfasında&lt;&#x2F;a&gt; en alt kısmında bulunan &lt;code&gt;.tar.gz&lt;&#x2F;code&gt; uzantılı sıkıştırılmış dosya işimize yarayacaktır.&lt;&#x2F;p&gt;
&lt;p&gt;İndirdiğiniz sıkıştırılmış dosyayı açın ve &lt;code&gt;SDL-X.X.X-XXXX&lt;&#x2F;code&gt; isimli klasörü &lt;code&gt;root&lt;&#x2F;code&gt; klasörü içerisine yapıştırın. Klasör ismini &lt;code&gt;SDL&lt;&#x2F;code&gt; olarak
değiştirin.&lt;&#x2F;p&gt;
&lt;p&gt;Terminal ile &lt;code&gt;root&#x2F;SDL&lt;&#x2F;code&gt; klasörüne erişin ve şu komutları gerçekleştirin.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;configure
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;span&gt; build
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; build
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cmake&lt;&#x2F;span&gt;&lt;span&gt; ..&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; make install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;oxygine-framework-a-sdl-entegre-etme&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#oxygine-framework-a-sdl-entegre-etme&quot; aria-label=&quot;Anchor link for: oxygine-framework-a-sdl-entegre-etme&quot;&gt;##&lt;&#x2F;a&gt;
Oxygine Framework’a SDL Entegre Etme&lt;&#x2F;h2&gt;
&lt;p&gt;Oxygine Framework’un SDL’i kullanabilmesi için kütüphane dosyalarını Oxygine Framework içerisine yerleştirmemiz gerekiyor.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;root&#x2F;SDL&#x2F;build&lt;&#x2F;code&gt; içerisindeki&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;libSDL2-2.0.so&lt;&#x2F;li&gt;
&lt;li&gt;libSDL2-2.0.so.0&lt;&#x2F;li&gt;
&lt;li&gt;libSDL2-2.0.so.0.4.0&lt;&#x2F;li&gt;
&lt;li&gt;libSDL2.so&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;dosyalarını &lt;code&gt;root&#x2F;oxygine-framework&#x2F;libs&lt;&#x2F;code&gt; klasörüne taşıyın&#x2F;kopyalayın.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kurulum-testi&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#kurulum-testi&quot; aria-label=&quot;Anchor link for: kurulum-testi&quot;&gt;##&lt;&#x2F;a&gt;
Kurulum Testi&lt;&#x2F;h2&gt;
&lt;p&gt;Kurulumu başarıyla yapıp yapmadığımızı kontrol etmek için &lt;code&gt;root&#x2F;oxygine-framework&#x2F;examples&#x2F;Demo&#x2F;proj.cmake&#x2F;&lt;&#x2F;code&gt; klasörüne gelin ve şu komutu
çalıştırın.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; chmod +x run.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; .&#x2F;run.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Pixi.js - Başlangıç</title>
        <published>2015-04-06T12:00:00+00:00</published>
        <updated>2015-04-06T12:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://era.yayd.in/blog/pixi-js-baslangic/"/>
        <id>https://era.yayd.in/blog/pixi-js-baslangic/</id>
        
        <content type="html" xml:base="https://era.yayd.in/blog/pixi-js-baslangic/">&lt;p&gt;Bu makale serisinde Pixi.js ile ilgili anlatımlar yer alacaktır.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ortamin-hazirlanmasi&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#ortamin-hazirlanmasi&quot; aria-label=&quot;Anchor link for: ortamin-hazirlanmasi&quot;&gt;##&lt;&#x2F;a&gt;
Ortamın Hazırlanması&lt;&#x2F;h2&gt;
&lt;p&gt;Öncelikle Pixi.js’yi indirmemiz gerekiyor. Bunun için github’ı kullanacağız. &lt;code&gt;git&lt;&#x2F;code&gt; kurulumunuzu yaptığınızı varsayarak devam ediyorum.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;GoodBoyDigital&#x2F;pixi.js.git
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Bize aslında gereken &lt;code&gt;bin&lt;&#x2F;code&gt; klasörü içerisindeki &lt;code&gt;pixi.js&lt;&#x2F;code&gt; dosyası fakat kaynak kodlarını da indirmemiz avantajımıza olacaktır.&lt;&#x2F;p&gt;
&lt;p&gt;Hemen bir index.html dosyası oluşturalım ve bu &lt;code&gt;pixi.js&lt;&#x2F;code&gt; kütüphanemizi dosyaya ekleyelim.&lt;&#x2F;p&gt;
&lt;p&gt;Daha sonra karışma olmaması için &lt;code&gt;uygulama&lt;&#x2F;code&gt; isminde bir klasör oluşturuyoruz ve içerisine bu &lt;code&gt;index.html&lt;&#x2F;code&gt; dosyamızı oluşturalım.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!doctype html&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;head&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;lt;title&amp;gt;Pixi.js&amp;lt;&#x2F;title&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;lt;!--[if lt IE 9]&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;lt;script src=&amp;quot;http:&#x2F;&#x2F;html5shiv.googlecode.com&#x2F;svn&#x2F;trunk&#x2F;html5.js&amp;quot;&amp;gt;&amp;lt;&#x2F;script&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;lt;![endif]--&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;head&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;body&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;!-- Pixi.js --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;script src=&amp;quot;..&#x2F;bin&#x2F;pixi.js&amp;quot;&amp;gt;&amp;lt;&#x2F;script&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;body&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;html&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;stage&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#stage&quot; aria-label=&quot;Anchor link for: stage&quot;&gt;##&lt;&#x2F;a&gt;
Stage&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Stage&lt;&#x2F;strong&gt;, görünümün ana kısmıdır. Her nesne &lt;strong&gt;stage&lt;&#x2F;strong&gt;’e bağlanmakta ve görüntülenmektedir. Yani nesnelerimizi, sahnemizi ve bütün ortamı
&lt;strong&gt;stage&lt;&#x2F;strong&gt; kullanarak yerleştireceğiz.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; PIXI.Stage(backgroundColor);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stage &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.Stage(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0xFFFFFF&lt;&#x2F;span&gt;&lt;span&gt;); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Beyaz arkaplan
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;renderer&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#renderer&quot; aria-label=&quot;Anchor link for: renderer&quot;&gt;##&lt;&#x2F;a&gt;
Renderer&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Renderer&lt;&#x2F;strong&gt;, Stage’i ve stage içerisindeki tüm nesneleri ekrana çizer. WebGL ve Canvas seçiminize göre bu çizim işlemi yapılır.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; * Canvas Renderer
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; * PIXI.CanvasRenderer(uzunluk=800], [yukseklik=600], [ozellikler]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;canvasRenderer &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.CanvasRenderer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;800&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; * WebGL Renderer
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; * PIXI.WebGLRenderer([uzunluk=0], [yukseklik=0], [ozellikler]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; *
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;webGLRenderer &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.WebGLRenderer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;800&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; * Auto Detect Renderer
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; * Otomatik olarak uygun olan render seçimini yapar.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; * PIXI.autoDetectRenderer([uzunluk=0], [yukseklik=0], [ozellikler]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;autoDetectRenderer &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.autoDetectRenderer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;800&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Auto Detect Renderer&lt;&#x2F;strong&gt; kullanmak daha iyi olacaktır. Eğer tarayıcı WebGL çalıştırıyorsa WebGL, çalıştırmıyorsa Canvas kullanacaktır.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;frame&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#frame&quot; aria-label=&quot;Anchor link for: frame&quot;&gt;##&lt;&#x2F;a&gt;
Frame&lt;&#x2F;h2&gt;
&lt;p&gt;Çizimin her karede yapılması gerekiyor, öbür türlü ilk frameden sonra bir çizim gerçekleşmeyecektir. Bunun için bir döngü oluşturacağız ve
sürekli çizim yapılmasını sağlayacağız.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;document.body.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;appendChild&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;renderer&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;view&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;requestAnimFrame&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cizimYap&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;cizimYap&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;requestAnimFrame&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cizimYap&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;renderer&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;render&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stage&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Farkettiyseniz bizim &lt;strong&gt;renderer&lt;&#x2F;strong&gt; isminde bir değişkenimiz yok. Bu değişkeni seçtiğiniz &lt;strong&gt;renderer&lt;&#x2F;strong&gt;’a göre ayarlamanız gerekiyor.&lt;&#x2F;p&gt;
&lt;p&gt;Şimdi sonuç olarak oluşturduğumuz script:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stage &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.Stage(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0xFFFFFF&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;renderer &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.autoDetectRenderer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;400&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;document.body.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;appendChild&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;renderer&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;view&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;requestAnimFrame&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cizimYap&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;cizimYap&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;requestAnimFrame&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cizimYap&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;renderer&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;render&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stage&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Çalışıp çalışmadığını kontrol etmek isterseniz isterseniz arkaplanı kırmızı yapabilirsiniz.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;0xFF0303&lt;&#x2F;code&gt; renk kodunu kullanabilirsiniz.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;texture&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#texture&quot; aria-label=&quot;Anchor link for: texture&quot;&gt;##&lt;&#x2F;a&gt;
Texture&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Texture&lt;&#x2F;strong&gt; ile resim dosyalarını hafızada tutacağız. Bu sayede &lt;strong&gt;sprite&lt;&#x2F;strong&gt;’da resim kullanmamız gerektiğinde bu &lt;strong&gt;texture&lt;&#x2F;strong&gt; nesnesini
kullanacağız. Bu sayede resimler tekrar ve tekrar yüklenmeyecek, sadece 1 defa çekilecektir.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; PIXI.Texture.fromImage(dosyaYolu, orjin, olcek);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;texture &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PIXI&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Texture&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;fromImage&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;resim.png&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;sprite&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#sprite&quot; aria-label=&quot;Anchor link for: sprite&quot;&gt;##&lt;&#x2F;a&gt;
Sprite&lt;&#x2F;h2&gt;
&lt;p&gt;Sprite’lar sahnemizdeki nesnelerimiz olacaktır.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; PIXI.Sprite(PIXI.Texture texture);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.Sprite(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;texture&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;anchor&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#anchor&quot; aria-label=&quot;Anchor link for: anchor&quot;&gt;###&lt;&#x2F;a&gt;
Anchor&lt;&#x2F;h3&gt;
&lt;p&gt;Nesnelerimizin orjin noktası olacaktır. Texture resmi de orjin noktasına göre çizilecektir. Bu sayede objenin tam olarak orta noktasının
neresi olacağını belirliyoruz.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* 0-0     =&amp;gt; Sol Üst
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; * 0.5-0.5 =&amp;gt; Ortala
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; * 1-1     =&amp;gt; Sağ Alt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt; *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchor&lt;&#x2F;span&gt;&lt;span&gt;.x = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchor&lt;&#x2F;span&gt;&lt;span&gt;.y = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;position&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#position&quot; aria-label=&quot;Anchor link for: position&quot;&gt;###&lt;&#x2F;a&gt;
Position&lt;&#x2F;h3&gt;
&lt;p&gt;Sprite nesnesinin sahnede bulunacağı koordinatlardır.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span&gt;.x = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span&gt;.y = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;150&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;rotation&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#rotation&quot; aria-label=&quot;Anchor link for: rotation&quot;&gt;###&lt;&#x2F;a&gt;
Rotation&lt;&#x2F;h3&gt;
&lt;p&gt;Sprite nesnesini orjin etrafında döndürmenizi sağlar.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rotation &lt;&#x2F;span&gt;&lt;span&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Döndürme kodunu çizim döngüsü dışında yaparsanız sadece 1 seferlik +0.1 artış yapacaktır. Sürekli dönmesi için döngü içerisinde bu kodu
kullanmanız gerekiyor.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;sahneye-ekleme&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#sahneye-ekleme&quot; aria-label=&quot;Anchor link for: sahneye-ekleme&quot;&gt;###&lt;&#x2F;a&gt;
Sahneye Ekleme&lt;&#x2F;h3&gt;
&lt;p&gt;Sprite nesnemizi artık sahneye ekleyelim.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stage&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;addChild&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;tum-kaynak&quot;&gt;&lt;a class=&quot;no-style&quot; href=&quot;#tum-kaynak&quot; aria-label=&quot;Anchor link for: tum-kaynak&quot;&gt;##&lt;&#x2F;a&gt;
Tüm Kaynak&lt;&#x2F;h2&gt;
&lt;p&gt;Ders içerisindeki bilgilerle yapılan tüm script kodu&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stage &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.Stage(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0xFFFFFF&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;renderer &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.autoDetectRenderer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;400&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;texture &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PIXI&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Texture&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;fromImage&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;resim.png&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite  &lt;&#x2F;span&gt;&lt;span&gt;= new PIXI.Sprite(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;texture&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchor&lt;&#x2F;span&gt;&lt;span&gt;.x = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchor&lt;&#x2F;span&gt;&lt;span&gt;.y = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span&gt;.x = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span&gt;.y = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;150&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stage&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;addChild&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;document.body.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;appendChild&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;renderer&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;view&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;requestAnimFrame&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cizimYap&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;cizimYap&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;requestAnimFrame&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cizimYap&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sprite&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rotation &lt;&#x2F;span&gt;&lt;span&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;renderer&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;render&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stage&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
</feed>
